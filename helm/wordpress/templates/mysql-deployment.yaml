apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "wordpress.fullname" . }}-mysql
  labels:
    {{- include "wordpress.labels" . | nindent 4 }}
    component: mysql
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "wordpress.selectorLabels" . | nindent 6 }}
      component: mysql
  template:
    metadata:
      labels:
        {{- include "wordpress.selectorLabels" . | nindent 8 }}
        component: mysql
    spec:
      containers:
      - name: mysql
        image: "{{ .Values.image.mysql.repository }}:{{ .Values.image.mysql.tag }}"
        imagePullPolicy: {{ .Values.image.mysql.pullPolicy }}
        ports:
        - containerPort: {{ .Values.mysql.port }}
          name: mysql
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: {{ .Values.mysql.rootPassword }}
        - name: MYSQL_DATABASE
          value: {{ .Values.mysql.database }}
        - name: MYSQL_USER
          value: {{ .Values.mysql.user }}
        - name: MYSQL_PASSWORD
          value: {{ .Values.mysql.password }}
        volumeMounts:
        - name: mysql-data
          mountPath: /var/lib/mysql
        resources:
          {{- toYaml .Values.resources.mysql | nindent 10 }}
        livenessProbe:
          exec:
            command:
            - mysqladmin
            - ping
            - -h
            - localhost
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - mysqladmin
            - ping
            - -h
            - localhost
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: mysql-data
        {{- if .Values.persistence.mysql.enabled }}
        persistentVolumeClaim:
          claimName: {{ include "wordpress.fullname" . }}-mysql-pvc
        {{- else }}
        emptyDir: {}
        {{- end }}
